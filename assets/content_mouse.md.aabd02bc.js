import{o as n,c as s,d as a}from"./app.c42696d0.js";const t='{"title":"Mouse","description":"","frontmatter":{},"headers":[{"level":2,"title":".isButtonDown(BUTTON.Code)","slug":"isbuttondown-button-code"},{"level":2,"title":".isButtonPressed(BUTTON.Code)","slug":"isbuttonpressed-button-code"},{"level":2,"title":".isButtonReleased(BUTTON.Code)","slug":"isbuttonreleased-button-code"},{"level":2,"title":".update()","slug":"update"},{"level":2,"title":".clear()","slug":"clear"},{"level":2,"title":".reset()","slug":"reset"},{"level":2,"title":".prevent(args)","slug":"prevent-args"},{"level":2,"title":".preventRemove()","slug":"preventremove"},{"level":2,"title":".events.on([\'pressed\', \'released\', \'down\'], null, (buttonCode, event, mouseX, mouseY)","slug":"events-on-pressed-released-down-null-buttoncode-event-mousex-mousey"},{"level":2,"title":".events.on([\'pressed\', \'released\', \'down_\'], null, (buttonCode, event, mouseX, mouseY) => { console.log(buttonCode); })","slug":"events-on-pressed-released-down-null-buttoncode-event-mousex-mousey-console-log-buttoncode"}],"relativePath":"content/mouse.md","lastUpdated":1615052490045}',e={},o=a('<h1 id="mouse"><a class="header-anchor" href="#mouse" aria-hidden="true">#</a> Mouse</h1><h2 id="isbuttondown-button-code"><a class="header-anchor" href="#isbuttondown-button-code" aria-hidden="true">#</a> .isButtonDown(BUTTON.Code)</h2><p>Checks if the key is held.</p><h2 id="isbuttonpressed-button-code"><a class="header-anchor" href="#isbuttonpressed-button-code" aria-hidden="true">#</a> .isButtonPressed(BUTTON.Code)</h2><p>Checks if the key was pressed, holding will not trigger this more than once.</p><h2 id="isbuttonreleased-button-code"><a class="header-anchor" href="#isbuttonreleased-button-code" aria-hidden="true">#</a> .isButtonReleased(BUTTON.Code)</h2><p>Checks whether the key was just released.</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span><span class="token function">isButtonDown</span><span class="token punctuation">(</span><span class="token constant">BUTTON</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span><span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span><span class="token function">isButtonDown</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">/* BUTTON.RIGHT */</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  Controller<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="update"><a class="header-anchor" href="#update" aria-hidden="true">#</a> .update()</h2><p>Ensure to use this for correct event handling at the end of the game loop.</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// all logic...</span>\n\n  Controller<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// or</span>\n\n  Controller<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="clear"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> .clear()</h2><p>Clear internal events</p><h2 id="reset"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> .reset()</h2><p>Insert events on a new canvas, deleting older events</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">PIXI</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\napp<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nController<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="prevent-args"><a class="header-anchor" href="#prevent-args" aria-hidden="true">#</a> .prevent(args)</h2><p>args: Array with button codes</p><p>Prevent mouse events in canvas/webgl context.</p><div class="language-js"><pre><code><span class="token comment">// ...</span>\n<span class="token keyword">import</span> Controller<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token constant">BUTTON</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n\napp<span class="token punctuation">.</span>loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">loader<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n    Controller<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span><span class="token function">prevent</span><span class="token punctuation">(</span><span class="token constant">BUTTON</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    app<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      Controller<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="preventremove"><a class="header-anchor" href="#preventremove" aria-hidden="true">#</a> .preventRemove()</h2><p>Remove prevent events</p><h2 id="events-on-pressed-released-down-null-buttoncode-event-mousex-mousey"><a class="header-anchor" href="#events-on-pressed-released-down-null-buttoncode-event-mousex-mousey" aria-hidden="true">#</a> .events.on([&#39;pressed&#39;, &#39;released&#39;, &#39;down&#39;], null, (buttonCode, event, mouseX, mouseY)</h2><p>Callback when any key is pressed/released/down.</p><h2 id="events-on-pressed-released-down-null-buttoncode-event-mousex-mousey-console-log-buttoncode"><a class="header-anchor" href="#events-on-pressed-released-down-null-buttoncode-event-mousex-mousey-console-log-buttoncode" aria-hidden="true">#</a> .events.on([&#39;pressed_&#39;, &#39;released_&#39;, &#39;down_&#39;], null, (buttonCode, event, mouseX, mouseY) =&gt; { console.log(buttonCode); })</h2><p>Callback when a particular key is pressed/released/down.</p><div class="language-js"><pre><code><span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;pressed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;released&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nargs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">arg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  Controller<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">buttonCode<span class="token punctuation">,</span> event<span class="token punctuation">,</span> mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> mouseOriginX<span class="token punctuation">,</span> mouseOriginY<span class="token punctuation">,</span> mouseMoveX<span class="token punctuation">,</span> mouseMoveY</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',27);e.render=function(a,t,e,p,c,u){return n(),s("div",null,[o])};export default e;export{t as __pageData};
