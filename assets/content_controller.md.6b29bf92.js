import{o as n,c as s,d as a}from"./app.900ac04c.js";const t='{"title":"Controller","description":"","frontmatter":{},"headers":[{"level":2,"title":".Mouse","slug":"mouse"},{"level":2,"title":".Keyboard","slug":"keyboard"},{"level":2,"title":".update()","slug":"update"},{"level":2,"title":".reset()","slug":"reset"},{"level":2,"title":".prevent()","slug":"prevent"},{"level":2,"title":".getContext()","slug":"getcontext"},{"level":2,"title":".setContext(canvas)","slug":"setcontext-canvas"}],"relativePath":"content/controller.md","lastUpdated":1619465059724}',e={},p=a('<h1 id="controller"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> Controller</h1><h2 id="mouse"><a class="header-anchor" href="#mouse" aria-hidden="true">#</a> .Mouse</h2><p>Access Mouse context</p><h2 id="keyboard"><a class="header-anchor" href="#keyboard" aria-hidden="true">#</a> .Keyboard</h2><p>Access Keyboard context</p><h2 id="update"><a class="header-anchor" href="#update" aria-hidden="true">#</a> .update()</h2><p>Ensure to use this for correct event handling at the end of the game loop.</p><h2 id="reset"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> .reset()</h2><p>Insert events on a new canvas, deleting older events</p><h2 id="prevent"><a class="header-anchor" href="#prevent" aria-hidden="true">#</a> .prevent()</h2><p>Prevent default all menu events</p><h2 id="getcontext"><a class="header-anchor" href="#getcontext" aria-hidden="true">#</a> .getContext()</h2><p>get canvas in controller</p><h2 id="setcontext-canvas"><a class="header-anchor" href="#setcontext-canvas" aria-hidden="true">#</a> .setContext(canvas)</h2><p>set new canvas in controller</p><div class="language-js"><pre><code><span class="token comment">// Wrong</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">PIXI</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nController<span class="token punctuation">.</span><span class="token function">setContext</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Controller<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Correct</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">PIXI</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">loader<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n  <span class="token comment">// ...</span>\n\n  Controller<span class="token punctuation">.</span><span class="token function">setContext</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Controller<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',16);e.render=function(a,t,e,o,c,l){return n(),s("div",null,[p])};export default e;export{t as __pageData};
