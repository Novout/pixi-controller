import{o as n,c as s,d as a}from"./app.cd4ede27.js";const p='{"title":"Keyboard","description":"","frontmatter":{},"headers":[{"level":2,"title":"isKeyDown(\'Key\')","slug":"iskeydown-key"},{"level":2,"title":".isKeyPressed(\'Key\')","slug":"iskeypressed-key"},{"level":2,"title":".isKeyReleased(\'Key\')","slug":"iskeyreleased-key"},{"level":2,"title":".update()","slug":"update"},{"level":2,"title":".clear()","slug":"clear"},{"level":2,"title":".reset()","slug":"reset"},{"level":2,"title":".events.on([\'pressed\', \'released\', \'down\'], null, callback)","slug":"events-on-pressed-released-down-null-callback"},{"level":2,"title":".events.on([\'pressed{Key}\', \'released{Key}\', \'down_{Key}\'], null, callback)","slug":"events-on-pressed-key-released-key-down-key-null-callback"}],"relativePath":"content/keyboard.md","lastUpdated":1614802974248}',t={},e=a('<h1 id="keyboard"><a class="header-anchor" href="#keyboard" aria-hidden="true">#</a> Keyboard</h1><p><a href="https://keycode.info/" target="_blank" rel="noopener noreferrer">Discovery keys here</a></p><h2 id="iskeydown-key"><a class="header-anchor" href="#iskeydown-key" aria-hidden="true">#</a> isKeyDown(&#39;Key&#39;)</h2><p>Checks if the key is held.</p><h2 id="iskeypressed-key"><a class="header-anchor" href="#iskeypressed-key" aria-hidden="true">#</a> .isKeyPressed(&#39;Key&#39;)</h2><p>Checks if the key was pressed, holding will not trigger this more than once.</p><h2 id="iskeyreleased-key"><a class="header-anchor" href="#iskeyreleased-key" aria-hidden="true">#</a> .isKeyReleased(&#39;Key&#39;)</h2><p>Checks whether the key was just released.</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span>loader<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;example.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">loader<span class="token punctuation">,</span> resources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// This creates a texture from a &#39;example.png&#39; image</span>\n    <span class="token keyword">const</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Sprite</span><span class="token punctuation">(</span>resources<span class="token punctuation">.</span>example<span class="token punctuation">.</span>texture<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Setup the position of the example</span>\n    example<span class="token punctuation">.</span>x <span class="token operator">=</span> app<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    example<span class="token punctuation">.</span>y <span class="token operator">=</span> app<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Rotate around the center</span>\n    example<span class="token punctuation">.</span>anchor<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n    example<span class="token punctuation">.</span>anchor<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n\n    app<span class="token punctuation">.</span>stage<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    app<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> \n      <span class="token keyword">if</span> <span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">isKeyDown</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowLeft&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        example<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">isKeyDown</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowRight&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyD&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        example<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">isKeyDown</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowUp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyW&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        example<span class="token punctuation">.</span>y <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">isKeyDown</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowDown&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        example<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n      Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="update"><a class="header-anchor" href="#update" aria-hidden="true">#</a> .update()</h2><p>Ensure to use this for correct event handling at the end of the game loop.</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// all logic...</span>\n\n  Controller<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// or</span>\n\n  Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="clear"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> .clear()</h2><p>Clear internal events</p><h2 id="reset"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> .reset()</h2><p>Insert events on a new canvas, deleting older events</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">PIXI</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\napp<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nController<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="events-on-pressed-released-down-null-callback"><a class="header-anchor" href="#events-on-pressed-released-down-null-callback" aria-hidden="true">#</a> .events.on([&#39;pressed&#39;, &#39;released&#39;, &#39;down&#39;], null, callback)</h2><p>Callback when any key in condition.</p><h2 id="events-on-pressed-key-released-key-down-key-null-callback"><a class="header-anchor" href="#events-on-pressed-key-released-key-down-key-null-callback" aria-hidden="true">#</a> .events.on([&#39;pressed_{Key}&#39;, &#39;released_{Key}&#39;, &#39;down_{Key}&#39;], null, callback)</h2><p>Callback when a particular key in condition.</p><div class="language-js"><pre><code><span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi.js-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;pressed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;released&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pressed_KeyI&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;released_KeyI&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;down_KeyI&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nargs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">arg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  Controller<span class="token punctuation">.</span>Keyboard<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">buttonCode<span class="token punctuation">,</span> event<span class="token punctuation">,</span> mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> mouseOriginX<span class="token punctuation">,</span> mouseOriginY<span class="token punctuation">,</span> mouseMoveX<span class="token punctuation">,</span> mouseMoveY</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',22);t.render=function(a,p,t,o,c,l){return n(),s("div",null,[e])};export default t;export{p as __pageData};
