import{o as e,c as n,d as s}from"./app.5a9e1c4a.js";const o='{"title":"Keyboard","description":"","frontmatter":{},"headers":[{"level":2,"title":"isKeyDown(\'KeyW\')]","slug":"iskeydown-keyw"},{"level":2,"title":".isKeyPressed(\'KeyW\')","slug":"iskeypressed-keyw"},{"level":2,"title":".isKeyReleased(\'KeyW\')","slug":"iskeyreleased-keyw"},{"level":2,"title":".update()","slug":"update"},{"level":2,"title":".clear()","slug":"clear"},{"level":2,"title":".reset()","slug":"reset"},{"level":2,"title":".events.on(\'pressed\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-pressed-null-keycode-event-console-log-keycode"},{"level":2,"title":".events.on(\'released\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-released-null-keycode-event-console-log-keycode"},{"level":2,"title":".events.on(\'down\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-down-null-keycode-event-console-log-keycode"},{"level":2,"title":".events.on(\'pressed_KeyW\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-pressed-keyw-null-keycode-event-console-log-keycode"},{"level":2,"title":".events.on(\'released_KeyW\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-released-keyw-null-keycode-event-console-log-keycode"},{"level":2,"title":".events.on(\'down_KeyW\', null, (keyCode, event) => { console.log(keyCode); })","slug":"events-on-down-keyw-null-keycode-event-console-log-keycode"}],"relativePath":"content/keyboard.md","lastUpdated":1614700295974}',a={},l=s('<h1 id="keyboard"><a class="header-anchor" href="#keyboard" aria-hidden="true">#</a> Keyboard</h1><h2 id="iskeydown-keyw"><a class="header-anchor" href="#iskeydown-keyw" aria-hidden="true">#</a> isKeyDown(&#39;KeyW&#39;)]</h2><p>Checks if the key is held.</p><h2 id="iskeypressed-keyw"><a class="header-anchor" href="#iskeypressed-keyw" aria-hidden="true">#</a> .isKeyPressed(&#39;KeyW&#39;)</h2><p>Checks if the key was pressed, holding will not trigger this more than once.</p><h2 id="iskeyreleased-keyw"><a class="header-anchor" href="#iskeyreleased-keyw" aria-hidden="true">#</a> .isKeyReleased(&#39;KeyW&#39;)</h2><p>Checks whether the key was just released.</p><h2 id="update"><a class="header-anchor" href="#update" aria-hidden="true">#</a> .update()</h2><p>Ensure to use this for correct event handling at the end of the game loop.</p><h2 id="clear"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> .clear()</h2><p>Clear internal events</p><h2 id="reset"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> .reset()</h2><p>Insert events on a new canvas, deleting older events</p><div class="language-js"><pre><code><span class="token keyword">import</span> Controller <span class="token keyword">from</span> <span class="token string">&#39;pixi.js-controller&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\napp<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PIXI<span class="token punctuation">.</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nController<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="events-on-pressed-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-pressed-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;pressed&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when any key is pressed.</p><h2 id="events-on-released-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-released-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;released&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when any key is released.</p><h2 id="events-on-down-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-down-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;down&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when any key is down.</p><h2 id="events-on-pressed-keyw-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-pressed-keyw-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;pressed_KeyW&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when a particular key is pressed.</p><h2 id="events-on-released-keyw-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-released-keyw-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;released_KeyW&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when a particular key is released.</p><h2 id="events-on-down-keyw-null-keycode-event-console-log-keycode"><a class="header-anchor" href="#events-on-down-keyw-null-keycode-event-console-log-keycode" aria-hidden="true">#</a> .events.on(&#39;down_KeyW&#39;, null, (keyCode, event) =&gt; { console.log(keyCode); })</h2><p>Callback when a particular key is down.</p>',26);a.render=function(s,o,a,t,d,c){return e(),n("div",null,[l])};export default a;export{o as __pageData};
